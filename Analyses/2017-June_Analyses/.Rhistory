# pdf( file="revigo_treemap.pdf", width=16, height=9 ) # width and height are in inches
# check the tmPlot command documentation for all possible parameters - there are a lot more
tmPlot(
stuff,
index = c("representative","description"),
vSize = "abslog10pvalue",
type = "categorical",
vColor = "representative",
title = "REVIGO Gene Ontology treemap",
inflate.labels = TRUE,      # set this to TRUE for space-filling group labels - good for posters
lowerbound.cex.labels = 0,   # try to draw as many labels as possible (still, some small squares may not get a label)
bg.labels = "#CCCCCCDC",     # define background color of group labels
# "#CCCCCC00" is fully transparent, "#CCCCCCAA" is semi-transparent grey, NA is opaque
fontcolor.labels = "gray36",
position.legend = "none"
)
#dev.off()
GeoduckOA <- read.csv(file="https://raw.githubusercontent.com/RobertsLab/project-geoduck-oa/master/data/PugetSound-2016-samples.csv")
head(GeoduckOA)
nsites <- unique(GeoduckOA$Site)
nsites
nsamples <- unique(GeoduckOA$PRVial)
length(nsamples)
Round1 <- GeoduckOA[c(GeoduckOA$Round==1),]
head(Round1)
Round2 <- GeoduckOA[c(GeoduckOA$Round==2),]
head(Round2)
setwd("~/Documents/Roberts Lab/Geoduck-DNR/Analyses/2017-June_Analyses")
setwd("~/Documents/Roberts Lab/Geoduck-DNR/Analyses/2017-June_Analyses")
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=YES) # import local file
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=TRUE) # import local file
head(NormProtArea)
bareCaseInlet <- ave(NormProtArea$CI.B.1, NormProtArea$CI.B.2)
bareCaseInlet <- ave(NormProtArea$CI.B.1, NormProtArea$CI.B.2)
head(bareCaseInlet)
bareFidalgoBay <- ave(NormProtArea$FB.B.1, NormProtArea$FB.B.2)
bareWillapaBay <- ave(NormProtArea$WB.B.1, NormProtArea$WB.B.2)
bareSkokomishRiver <- ave(NormProtArea$SK.B.1, NormProtArea$SK.B.2)
barePortGamble <- ave(NormProtArea$PG.B.1, NormProtArea$PG.B.2)
eelgrassCaseInlet <- ave(NormProtArea$CI.E.1, NormProtArea$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtArea$FB.E.1, NormProtArea$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtArea$SK.E.1, NormProtArea$SK.E.2)
eelgrassPortGamble <- ave(NormProtArea$PG.E.1, NormProtArea$PG.E.2)
NormProtAreaAveraged <- data.frame(NormProtArea$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver)
head(NormProtAreaAveraged)
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
install.packages("vegan") #Install vegan package
library(vegan)
area.protID2 <- NormProtAreaAveraged[-1]
rownames(area.protID2) <- NormProtAreaAveraged[,1]
View(NormProtAreaAveraged)
setwd("~/Documents/Roberts Lab/Geoduck-DNR/Analyses/2017-June_Analyses")
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=TRUE, na.strings = "0") # import local file
View(NormProtArea)
View(NormProtArea)
head(NormProtArea)
NormProtAreaAgg <- aggregate(NormProtArea[-1], NormProtArea[1], mean, na.action = na.omit, na.rm = TRUE) #Average protein areas across transitions and peptides
head(NormProtAreaAgg) #Confirm changes
NormProtAreaAgg <- aggregate(NormProtArea[-1], NormProtArea[1], sum, na.action = na.omit, na.rm = TRUE) #sum protein areas across transitions
NormProtAreaAgg <- aggregate(NormProtArea[-1], NormProtArea[1], "sum", na.action = na.omit, na.rm = TRUE) #sum protein areas across transitions
library("plyr")
NormProtAreaAgg <- ddply(.NormProtArea, .(Protein.Name), colwise(sum))
head(NormProtArea)
test.set <- NormProtArea[1:4, ]
head(test.set)
View(test.set)
test.set
test.Agg <- aggregate(test.set[-1], test.set[1], FUN=sum, na.action = na.omit, na.rm = TRUE)
test.Agg <- aggregate(test.set[-1], by=test.set[1], FUN=sum, na.action = na.omit, na.rm = TRUE)
test.Agg <- aggregate(test.set[-1], by=test.set[1], FUN=Summary, na.action = na.omit, na.rm = TRUE)
test.Agg <- aggregate(test.set[-1], by=test.set[1], FUN = sum(), na.action = na.omit, na.rm = TRUE)
test.Agg <- aggregate(test.set[-1], by=test.set[1], FUN = sum, na.action = na.omit, na.rm = TRUE)
test.Agg <- aggregate(test.set[-1], by=test.set[1], FUN = mean, na.action = na.omit, na.rm = TRUE)
test.set <- NormProtArea[1:4, ]
test.Agg <- tapply(test.set[-1], test.set[1], FUN = sum, na.action = na.omit, na.rm = TRUE)
test.set
test.set[1]
library(dplyr)
x %>%
group_by(test.set[1]) %>%
summarise(test.set[-1] = sum(test.set[-1]))
x %>%
group_by(test.set[1]) %>%
summarise(test.set[-1]=sum(test.set[-1]))
test.set
aggregate(cbind(test.set[-1]) ~ test.set[1], FUN = sum, data = test.set,
na.rm = TRUE, na.action = NULL)
aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2      FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ test.set[1], FUN = sum, data = test.set,
na.rm = TRUE, na.action = NULL)
aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ test.set[1], FUN = sum, data = test.set, na.rm = TRUE, na.action = NULL)
aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ Protein.Name, FUN = sum, data = test.set, na.rm = TRUE, na.action = NULL)
NormProtAreaAgg <- (cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ Protein.Name,
FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
NormProtAreaAgg <- (cbind(
FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg)
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
setwd("~/Documents/Roberts Lab/Geoduck-DNR/Analyses/2017-June_Analyses")
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=TRUE, na.strings = "0") # import local file
head(NormProtArea)
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg) #confirming that proteins are now summed
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2)
head(bareCaseInlet)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
NormProtAreaAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver)
head(NormProtAreaAgg$CI.E.1)
head(NormProtAreaAgg$CI.E.2)
View(NormProtAreaAgg)
View(NormProtArea)
head(NormProtArea)
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2, CI.E.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg) #confirming that proteins are now summed
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
NormProtAreaAggAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver)
head(NormProtAreaAveraged)
NormProtAreaAggAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver)
head(NormProtAreaAggAveraged)
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
install.packages("vegan") #Install vegan package
install.packages("vegan")
library(vegan)
area.protID2 <- NormProtAreaAggAveraged[-1]
rownames(area.protID2) <- NormProtAreaAggAveraged[,1]
head(area.protID2)
area2.t <- t(area.protID2[,1:10])
head(area.protID2)
area2.t <- t(area.protID2[,1:9])
area2.tra <- (area2.t+1)
area2.tra <- data.trans(area2.tra, method = 'log', plot = FALSE)
head(area2.tra)
proc.nmds <- metaMDS(area2.tra, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
head(area2.t)
View(area.protID2)
View(area2.t)
View(area2.tra)
View(NormProtAreaAggAveraged)
area2.tra <- (1/area2.t+1)
View(area2.tra)
View(area2.t)
area2.tra1 <- (1/area2.t+1)
View(area2.tra1)
area2.tra1 <- (1/(area2.t+1))
View(area2.tra1)
View(area2.t)
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(-0.045,0.025, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
area2.tra1 <- (area2.t+1)
area2.tra2 <- data.trans(area2.tra, method = 'log', plot = FALSE)
View(area2.tra2)
View(area2.t)
proc.nmds <- metaMDS(area2.t, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(-0.045,0.025, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
legend(0.2,0.05, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
View(area2.t)
setwd("~/Documents/Roberts Lab/Geoduck-DNR/2017-06-28_InvNORM_Transition-Area.csv")
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=TRUE, na.strings = "#DIV/0!") # import local file
head(NormProtArea)
View(NormProtArea)
setwd("~/Documents/Roberts Lab/Geoduck-DNR/Analyses/2017-June_Analyses")
NormProtArea <- read.csv("2017-06-28_InvNORM_Transition-Area.csv", header=TRUE, na.strings = "#DIV/0!") # import local file
head(NormProtArea)
View(NormProtArea)
### SUM TRANSITION AREA BY PROTEIN ###
# The "Area" values (which have already been normalized by TIC) are peak area for each transition. Sum them to determine total area for each protein
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2, CI.E.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg) #confirming that proteins are now summed
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2) # create vector for each site/treatment that averages the replicates (of which there are 2)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
NormProtAreaAggAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver) # combine site/treatment vectors into new dataframe
head(NormProtAreaAggAveraged)
#Load the source file for the biostats package
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
library(vegan)
area.protID2 <- NormProtAreaAggAveraged[-1]
rownames(area.protID2) <- NormProtAreaAggAveraged[,1]
head(area.protID2)
area.protID2[1,1:9]
area2.t <- t(area.protID2[,1:9])
View(area2.t)
area2.tra1 <- (area2.t+1)
View(area2.tra1)
area2.tra2 <- data.trans(area2.tra, method = 'log', plot = FALSE)
area2.tra2 <- data.trans(area2.tra1, method = 'log', plot = FALSE)
View(area2.tra2)
area2.tra <- (area2.t+1)
area2.tra <- data.trans(area2.tra, method = 'log', plot = FALSE)
View(area2.tra)
area2.t <- t(area.protID2[,1:9])
area2.t <- t(area.protID2[,1:9])
area2.t <- t(area.protID2[,1:9])
area2.tra1 <- (area2.t+1)
area2.tra2 <- data.trans(area2.tra1, method = 'log', plot = FALSE)
View(area2.tra2)
proc.nmds <- metaMDS(area2.tra2, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
View(area2.tra2)
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
head(area2.t)
tail(area2.t)
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
library(vegan)
area.protID2 <- NormProtAreaAggAveraged[-1]
rownames(area.protID2) <- NormProtAreaAggAveraged[,1]
head(area.protID2)
area2.t <- t(area.protID2[,1:9])
area2.tra1 <- (area2.t+1)
area2.tra2 <- data.trans(area2.tra1, method = 'ln', plot = FALSE)
area2.tra2 <- data.trans(area2.tra1, method = 'log', plot = FALSE)
#Make MDS dissimilarity matrix
proc.nmds <- metaMDS(area2.tra2, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
NormProtArea <- read.csv("2017-06-28_InvNORM_Transition-Area.csv", header=TRUE, na.strings = "#DIV/0!") # import local file
head(NormProtArea)
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2, CI.E.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg) #confirming that proteins are now summed
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2) # create vector for each site/treatment that averages the replicates (of which there are 2)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
NormProtAreaAggAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver) # combine site/treatment vectors into new dataframe
head(NormProtAreaAggAveraged)
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
library(vegan)
#Make sure first column of protein names is recognized as row names instead of values - this takes the first column containin protein names, and assigns it to the row "header" names
area.protID2 <- NormProtAreaAggAveraged[-1]
rownames(area.protID2) <- NormProtAreaAggAveraged[,1]
head(area.protID2)
#Transpose the file so that rows and columns are switched and normalized by log(x+1)
area2.t <- t(area.protID2[,1:9])
View(area2.t)
area2.tra1 <- (area2.t+1)
area2.tra2 <- data.trans(area2.tra1, method = 'log', plot = FALSE)
#Make MDS dissimilarity matrix
proc.nmds <- metaMDS(area2.tra2, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
ncol(area2.tra2)
ncol(area2.tra1)
nrow(area.protID2)
ncol(area2.t)
nrow(area2.tra2)
nrow(NormProtAreaAggAveraged)
ncol(NormProtAreaAggAveraged)
ncol(area2.tra2)
nrow(area2.tra2)
proc.nmds <- metaMDS(area2.tra1, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
proc.nmds <- metaMDS(area2.t, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
install.packages("pheatmap")
library(pheatmap)
pheatmap(area2.tra, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'average', show_rownames = T, show_colnames = F)
#Create heatmap
pheatmap(area2.tra2, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'average', show_rownames = T, show_colnames = F)
pheatmap(area2.tra2, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'median', show_rownames = T, show_colnames = F)
pheatmap(area2.tra2, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'median', show_rownames = T, show_colnames = F)
png(filename = "Heatmap-by-median.png")
pheatmap(area2.tra, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'median', show_rownames = T, show_colnames = F)
dev.off()
png(filename = "Heatmap-by-median.png")
pheatmap(area2.tra2, cluster_rows = T, cluster_cols = T, clustering_distance_rows = 'euclidean', clustering_distance_cols = 'euclidean', clustering_method = 'median', show_rownames = T, show_colnames = F)
dev.off()
NormProtArea <- read.csv("2017-06-02_SKYLINE-Total-Protein-Area-NORM.csv", header=TRUE, na.strings = "0") # import local file
head(NormProtArea)
NormProtAreaAgg <- aggregate(cbind(FB.E.1, CI.E.1, PG.B.1, SK.E.1, FB.B.1, WB.B.1, SK.B.1, CI.B.1, PG.E.1, WB.B.2, PG.E.2, FB.E.2, FB.B.2, CI.B.2, SK.E.2, PG.B.2, SK.B.2, CI.E.2) ~ Protein.Name, FUN = sum, data = NormProtArea, na.rm = TRUE, na.action = NULL)
head(NormProtAreaAgg) #confirming that proteins are now summed
#### AVERAGE REPLICATES ####
# FYI No eelgrass sample for Willapa Bay
bareCaseInlet <- ave(NormProtAreaAgg$CI.B.1, NormProtAreaAgg$CI.B.2) # create vector for each site/treatment that averages the replicates (of which there are 2)
bareFidalgoBay <- ave(NormProtAreaAgg$FB.B.1, NormProtAreaAgg$FB.B.2)
bareWillapaBay <- ave(NormProtAreaAgg$WB.B.1, NormProtAreaAgg$WB.B.2)
bareSkokomishRiver <- ave(NormProtAreaAgg$SK.B.1, NormProtAreaAgg$SK.B.2)
barePortGamble <- ave(NormProtAreaAgg$PG.B.1, NormProtAreaAgg$PG.B.2)
eelgrassCaseInlet <- ave(NormProtAreaAgg$CI.E.1, NormProtAreaAgg$CI.E.2)
eelgrassFidalgoBay <- ave(NormProtAreaAgg$FB.E.1, NormProtAreaAgg$FB.E.2)
eelgrassSkokomishRiver <- ave(NormProtAreaAgg$SK.E.1, NormProtAreaAgg$SK.E.2)
eelgrassPortGamble <- ave(NormProtAreaAgg$PG.E.1, NormProtAreaAgg$PG.E.2)
NormProtAreaAggAveraged <- data.frame(NormProtAreaAgg$Protein.Name, bareCaseInlet, bareFidalgoBay, barePortGamble, bareSkokomishRiver, bareWillapaBay, eelgrassCaseInlet, eelgrassFidalgoBay, eelgrassPortGamble, eelgrassSkokomishRiver) # combine site/treatment vectors into new dataframe
head(NormProtAreaAggAveraged)
source("biostats.R") #Either load the source R script or copy paste. Must run this code before NMDS.
library(vegan)
head(NormProtAreaAggAveraged)
area.protID2 <- NormProtAreaAggAveraged[-1]
area.protID2 <- NormProtAreaAggAveraged[-1]
rownames(area.protID2) <- NormProtAreaAggAveraged[,1]
head(area.protID2)
nrow(NormProtAreaAggAveraged)
ncol(NormProtAreaAggAveraged)
area2.t <- t(area.protID2[,1:9])
proc.nmds <- metaMDS(area2.t, distance = 'bray', k = 2, trymax = 100, autotransform = FALSE)
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=0.5)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
head(NormProtAreaAggAveraged)
View(area2.t)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim=1, ylim=1)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim = 1.0, yli m =1)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim = 1.0, ylim = 1)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim = .5, ylim = 1)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1)
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim= c(-1,1), ylim= c(-1,1))
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim= c(-10,10), ylim= c(-10,10))
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim= c(-5,5), ylim= c(-5,5))
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1, xlim= c(-1,1), ylim= c(-1,1))
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1)
mble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.2,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
#Make figure
fig.nmds <- ordiplot(proc.nmds, choices=c(1,2), type='none', display='sites', xlab='Axis 1', ylab='Axis 2', cex=1)
#bare=circle
#eelgrass=triangle
#case=red
#fidalgo=blue
#willapa=black
#skokomish=green
#gamble=magenta
points(fig.nmds, 'sites', col=c('red', 'blue', 'black', 'green', 'magenta','red', 'blue', 'black', 'green', 'magenta'), pch=c(rep(16,5), rep(17,5)))
legend(0.185,0.1, pch=c(rep(16,5), 1, 2), legend=c('Case Inlet', "Fidalgo Bay", "Willapa Bay", "Skokomish", "Port Gamble", "Bare", "Eelgrass"), col=c('red', 'blue', 'black', 'green', 'magenta', 'black', 'black'))
var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE)
ProtVariance <- var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE)
View(ProtVariance)
library(Biobase)
ProtMedians <- rowMedian(area2.tra2)
ProtMedians <- rowMedians(area2.tra2)
ProtMedians <- rowMedians(area2.tra2, na.rm=TRUE)
ProtMeans <- rowMeans(area2.tra2, na.rm=TRUE)
head(ProtMeans)
ncol(ProtMeans)
ProtMeans <- colMeans(area2.tra2, na.rm=TRUE)
head(ProtMeans)
ProtMeans <- data.frame(colMeans(area2.tra2, na.rm=TRUE))
View(ProtMeans)
View(ProtVariance)
ncol(ProtMeans)
plot(ProtMeans, ProtVariance)
plot(x=ProtMeans, y=ProtVariance)
head(ProtMeans[1])
plot(x=ProtMeans[1], y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV")
plot(x=ProtMeans[1], y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", xlim=c(0,10), ylim=c(-1,1))
plot(x=ProtMeans[1], y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", xlim=c(0,10), ylim=c(-1,1), type=p)
plot(x=ProtMeans[1], y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", xlim=c(0,10), ylim=c(-1,1), type="p")
plot(x=ProtMeans[1], y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
plot(x = ProtMeans, y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
ncol(ProtMeans)
nrow(ProtMeans)
ncol(ProtVariance)
ncol(ProtVariance)
nrow(ProtVariance)
plot(x=ProtMeans[,1], y=ProtVariance[,1], main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
plot(x=ProtMeans, y=ProtVariance[,1], main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
plot(x=ProtMeans, y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
plot(x=ProtMeans$colMeans.area2.tra2..na.rm...TRUE., y=ProtVariance, main= "Protein Variance by Mean", xlab= "Mean", ylab= "CV", type="p")
ProtVariance <- c(var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE))
ProtMeans <- c(colMeans(area2.tra2, na.rm=TRUE))
area2.tra2[,1]
head(NormProtAreaAggAveraged[1])
ProtVar.Means <- data.frame(NormProtAreaAggAveraged[1], ProtMeans, ProtVariance)
nrow(NormProtAreaAggAveraged[1])
nrow(ProtMeans)
length(ProtMeans)
length(ProtVariance)
ProtVariance <- c(var(NormProtAreaAggAveraged[-1], NormProtAreaAggAveraged[1], na.rm=TRUE))
ProtVariance <- data.frame(var(NormProtAreaAggAveraged[-1], NormProtAreaAggAveraged[1], na.rm=TRUE))
View(ProtVariance)
ProtVariance <- data.frame(var(NormProtAreaAggAveraged[1], NormProtAreaAggAveraged[-1], na.rm=TRUE))
ProtVariance <- c(var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE))
ProtMeans <- c(colMeans(area2.tra2, na.rm=TRUE))
ProtVar.Means <- data.frame(NormProtAreaAggAveraged[1], ProtMeans, ProtVariance)
ProtMeans <- c(colMeans(area2.tra2[-1], area2.tra2[1], na.rm=TRUE))
ProtMeans <- c(colMeans(area2.tra2[-1], na.rm=TRUE))
ProtVariance <- c(var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE))
ProtMeans <- c(colMeans(area2.tra2[-1], na.rm=TRUE))
ncol(ProtMeans)
nrow(ProtMeans)
ncol(ProtVariance)
nrow(ProtVariance)
ProtVariance <- c(var(area2.tra2[-1], area2.tra2[1], na.rm=TRUE))
ProtMeans <- c(colMeans(area2.tra2[-1], na.rm=TRUE))
length(ProtMeans)
length(ProtVariance)
NormProtAreaAggAveraged
nrow(NormProtAreaAggAveraged[1])
head(area.protID2)
head(NormProtAreaAggAveraged)
ProtNAmes <- c(NormProtAreaAggAveraged$NormProtAreaAgg.Protein.Name)
length(ProtNAmes)
head(ProtNAmes)
